define ("qtype_shortmath/visual-math-input",["exports","qtype_shortmath/mathquill"],function(a,b){"use strict";Object.defineProperty(a,"__esModule",{value:!0});a.default=void 0;b=function(a){return a&&a.__esModule?a:{default:a}}(b);function c(a,b,c){if(b in a){Object.defineProperty(a,b,{value:c,enumerable:!0,configurable:!0,writable:!0})}else{a[b]=c}return a}function d(a,b){if(!(a instanceof b)){throw new TypeError("Cannot call a class as a function")}}function e(a,b){for(var c=0,d;c<b.length;c++){d=b[c];d.enumerable=d.enumerable||!1;d.configurable=!0;if("value"in d)d.writable=!0;Object.defineProperty(a,d.key,d)}}function f(a,b,c){if(b)e(a.prototype,b);if(c)e(a,c);return a}function g(a,b){var c=b.get(a);if(!c){throw new TypeError("attempted to get private field on non-instance")}if(c.get){return c.get.call(a)}return c.value}function h(a,b,c){var d=b.get(a);if(!d){throw new TypeError("attempted to set private field on non-instance")}if(d.set){d.set.call(a,c)}else{if(!d.writable){throw new TypeError("attempted to set read only private field")}d.value=c}return c}var i=null,j=function(){function a(c,e){var f=this;d(this,a);k.set(this,{writable:!0,value:void 0});l.set(this,{writable:!0,value:void 0});m.set(this,{writable:!0,value:void 0});n.set(this,{writable:!0,value:void 0});o.set(this,{writable:!0,value:void 0});h(this,k,c);if("string"==typeof e){h(this,m,c.closest(e))}else{h(this,m,e)}h(this,n,document.createElement("div"));g(this,n).classList.add("visual-math-input-field");var j=b.default.getInterface(2);h(this,l,j.MathField(g(this,n),{spaceBehavesLikeTab:!0,handlers:{edit:function edit(a){f.onEdit(g(f,k),a)}}}));this.parent.appendChild(g(this,n));this.onEdit=function(a,b){a.value="\\[ ".concat(b.latex()," \\]")};h(this,o,this.parent.querySelector("textarea"));this.textarea.addEventListener("blur",function(){i=f})}f(a,[{key:"addClass",value:function addClass(a){g(this,n).classList.add(a)}},{key:"enable",value:function enable(){this.textarea.setAttribute("disabled",!1)}},{key:"disable",value:function disable(){this.textarea.setAttribute("disabled",!0)}},{key:"parent",get:function get(){return g(this,m)}},{key:"textarea",get:function get(){return g(this,o)}},{key:"rawInput",get:function get(){return g(this,k)}},{key:"mathInput",get:function get(){return g(this,l)}}]);return a}(),k=new WeakMap,l=new WeakMap,m=new WeakMap,n=new WeakMap,o=new WeakMap,p=function(){function a(b,e,f){d(this,a);c(this,"element",null);this.name=b;this.text=e;this.onClick=f;this.boundInput=null}f(a,[{key:"bindInput",value:function bindInput(a){this.boundInput=a}},{key:"enable",value:function enable(){var a=this;if(null!==this.element){return}this.element=document.createElement("button");this.element.innerHTML=this.text;this.element.classList.add("visual-math-input-control","mq-math-mode","btn","btn-primary");this.element.addEventListener("click",function(b){b.preventDefault();if(null!==a.getInput()){a.onClick(a.getInput().mathInput);a.getInput().mathInput.focus()}})}},{key:"getInput",value:function getInput(){if(null!==this.boundInput){return this.boundInput}else{return i}}}]);return a}(),q=function(){function a(b){d(this,a);this.wrapper=b;this.wrapper.classList.add("visual-math-input-wrapper");this.controls=[];this.boundInput=null}f(a,[{key:"define",value:function define(a,b,c){this.controls.push(new p(a,b,c))}},{key:"enable",value:function enable(a){var b=this;this.controls.forEach(function(c){if(-1!==a.indexOf(c.name)){if(null!==b.boundInput){c.bindInput(b.boundInput)}c.enable();b.wrapper.appendChild(c.element)}})}},{key:"enableAll",value:function enableAll(){var a=this;this.controls.forEach(function(b){if(null!==a.boundInput){b.bindInput(a.boundInput)}b.enable();a.wrapper.appendChild(b.element)})}},{key:"defineDefault",value:function defineDefault(){this.define("sqrt","<span class=\"mq-root-block\">&radic;</span>",function(a){return a.cmd("\\sqrt")});this.define("int","<span class=\"mq-root-block\">&int;</span>",function(a){return a.cmd("\\int")});this.define("sum","<span class=\"mq-root-block\"><span class=\"mq-large-operator mq-non-leaf\">&sum;</span></span>",function(a){return a.cmd("\\sum")});this.define("lim","<span class=\"mq-root-block\">lim</span>",function(a){a.cmd("\\lim").typedText("_").write("x").cmd("\\to").write("0").moveToRightEnd()});this.define("nchoosek","<div class=\"mq-math-mode\" style=\"cursor:pointer;font-size:100%;\">\n            <span class=\"mq-root-block\">\n                <span class=\"mq-non-leaf\">\n                    <span class=\"mq-paren mq-scaled\" style=\"transform: scale(0.8, 1.5);\">(</span>\n                    <span class=\"mq-non-leaf\" style=\"margin-top:0;\">\n                        <span class=\"mq-array mq-non-leaf\">\n                            <span style=\"font-size: 14px;\">\n                                <var>n</var>\n                            </span>\n                            <span style=\"font-size: 14px;\">\n                                <var>k</var>\n                            </span>\n                        </span>\n                    </span>\n                    <span class=\"mq-paren mq-scaled\" style=\"transform: scale(0.8, 1.5);\">)</span>\n                </span>\n            </span>\n        </div>",function(a){return a.cmd("\\choose")});this.define("divide","<span class=\"mq-root-block\">/</span>",function(a){return a.cmd("\\frac")});this.define("plusminus","<span class=\"mq-root-block\">&plusmn;</span>",function(a){return a.cmd("\\pm")});this.define("theta","<span class=\"mq-root-block\">&theta;</span>",function(a){return a.cmd("\\theta")});this.define("pi","<span class=\"mq-root-block\">&pi;</span>",function(a){return a.cmd("\\pi")});this.define("infinity","<span class=\"mq-root-block\">&infin;</span>",function(a){return a.cmd("\\infinity")});this.define("caret","\n        <div class=\"mq-math-mode\" style=\"cursor:pointer;font-size:100%;\">\n            <span class=\"mq-root-block\">\n                <var>x</var>\n                <span class=\"mq-supsub mq-non-leaf mq-sup-only\">\n                    <span class=\"mq-sup\">\n                        <var>y</var>\n                    </span>\n                </span>\n            </span>\n        </div>",function(a){return a.cmd("^")})}},{key:"bindInput",value:function bindInput(a){this.boundInput=a}}]);return a}();a.default={Input:j,Control:p,ControlList:q};return a.default});
//# sourceMappingURL=visual-math-input.min.js.map
