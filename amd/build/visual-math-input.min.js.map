{"version":3,"sources":["../src/visual-math-input.js"],"names":["lastFocusedInput","Input","input","inputParent","closest","document","createElement","classList","add","MQ","MathQuill","getInterface","MathField","spaceBehavesLikeTab","handlers","edit","field","onEdit","parent","appendChild","$input","value","latex","querySelector","textarea","addEventListener","className","setAttribute","Control","name","text","onClick","boundInput","element","innerHTML","event","preventDefault","getInput","mathInput","focus","ControlList","wrapper","controls","push","names","forEach","control","indexOf","bindInput","enable","define","cmd","typedText","write","moveToRightEnd"],"mappings":"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","sourcesContent":["import MathQuill from \"qtype_shortmath/mathquill\";\n\n// When a control button is clicked, the input blurs.\n// This lets the control button know which input to act on.\nlet lastFocusedInput = null;\n\nclass Input {\n    #rawInput;  // Plain HTMLInputElement\n    #mathInput; // MathQuill Field\n    #parent;\n    #mathquillContainer;\n    #textarea;\n\n    /**\n     * \n     * @param {HTMLInputElement} input A plain HTML input element\n     * @param {String|HTMLElement} inputParent Some parent element of the input to use when constructing the mathquill input\n     */\n    constructor(input, inputParent) {\n        this.#rawInput = input;\n        if (typeof inputParent === \"string\") {\n            this.#parent = input.closest(inputParent);\n        } else {\n            this.#parent = inputParent;\n        }\n        this.#mathquillContainer = document.createElement(\"div\");\n        this.#mathquillContainer.classList.add(\"visual-math-input-field\");\n        let MQ = MathQuill.getInterface(2);\n        this.#mathInput = MQ.MathField(this.#mathquillContainer, {\n            spaceBehavesLikeTab: true,\n            handlers: {\n                edit: field => {\n                    this.onEdit(this.#rawInput, field);\n                }\n            }\n        });\n        this.parent.appendChild(this.#mathquillContainer);\n        this.onEdit = ($input, field) => {\n            $input.value = `\\\\[ ${field.latex()} \\\\]`;\n        };\n        this.#textarea = this.parent.querySelector(\"textarea\");\n        this.textarea.addEventListener(\"blur\", () => {\n            lastFocusedInput = this;\n        });\n    }\n\n    get parent() {\n        return this.#parent;\n    }\n\n    get textarea() {\n        return this.#textarea;\n    }\n\n    get rawInput() {\n        return this.#rawInput;\n    }\n\n    get mathInput() {\n        return this.#mathInput;\n    }\n\n    addClass(className) {\n        this.#mathquillContainer.classList.add(className);\n    }\n\n    enable() {\n        this.textarea.setAttribute(\"disabled\", false);\n    }\n\n    disable() {\n        this.textarea.setAttribute(\"disabled\", true);\n    }\n\n}\n\nclass Control {\n    element = null;\n\n    constructor(name, text, onClick) {\n        this.name = name;\n        this.text = text;\n        this.onClick = onClick;\n        this.boundInput = null;\n    }\n\n    bindInput(input) {\n        this.boundInput = input;\n    }\n\n    enable() {\n        if (this.element !== null) {\n            return;\n        }\n        this.element = document.createElement(\"button\");\n        this.element.innerHTML = this.text;\n        this.element.classList.add(\"visual-math-input-control\", \"mq-math-mode\", \"btn\", \"btn-primary\");\n        this.element.addEventListener(\"click\", event => {\n            event.preventDefault();\n            if (this.getInput() !== null) {\n                this.onClick(this.getInput().mathInput);\n                this.getInput().mathInput.focus();\n            }\n        });\n    }\n\n    getInput() {\n        if (this.boundInput !== null) {\n            return this.boundInput;\n        } else {\n            return lastFocusedInput;\n        }\n    }\n\n}\n\nclass ControlList {\n\n    constructor(wrapper) {\n        this.wrapper = wrapper;\n        this.wrapper.classList.add(\"visual-math-input-wrapper\");\n        this.controls = [];\n        this.boundInput = null;\n    }\n\n    define(name, text, onClick) {\n        this.controls.push(new Control(name, text, onClick));\n    }\n\n    enable(names) {\n        this.controls.forEach(control => {\n            if (names.indexOf(control.name) !== -1) {\n                if (this.boundInput !== null) {\n                    control.bindInput(this.boundInput);\n                }\n                control.enable();\n                this.wrapper.appendChild(control.element);\n            }\n        });\n    }\n\n    enableAll() {\n        this.controls.forEach(control => {\n            if (this.boundInput !== null) {\n                control.bindInput(this.boundInput);\n            }\n            control.enable();\n            this.wrapper.appendChild(control.element);\n        });\n    }\n\n    defineDefault() {\n        // It is also possible to render \\\\[ \\\\binom{n}{k} \\\\] with MathJax.\n        // Using MathQuill's HTML output is slightly less clean, but we avoid using YUI and MathJax.\n\n        let sqrt = '<span class=\"mq-root-block\">&radic;</span>';\n        let int = '<span class=\"mq-root-block\">&int;</span>';\n        let sum = '<span class=\"mq-root-block\"><span class=\"mq-large-operator mq-non-leaf\">&sum;</span></span>';\n        let lim = '<span class=\"mq-root-block\">lim</span>';\n\n        let nchoosek =\n            `<div class=\"mq-math-mode\" style=\"cursor:pointer;font-size:100%;\">\n            <span class=\"mq-root-block\">\n                <span class=\"mq-non-leaf\">\n                    <span class=\"mq-paren mq-scaled\" style=\"transform: scale(0.8, 1.5);\">(</span>\n                    <span class=\"mq-non-leaf\" style=\"margin-top:0;\">\n                        <span class=\"mq-array mq-non-leaf\">\n                            <span style=\"font-size: 14px;\">\n                                <var>n</var>\n                            </span>\n                            <span style=\"font-size: 14px;\">\n                                <var>k</var>\n                            </span>\n                        </span>\n                    </span>\n                    <span class=\"mq-paren mq-scaled\" style=\"transform: scale(0.8, 1.5);\">)</span>\n                </span>\n            </span>\n        </div>`;\n\n        let divide = '<span class=\"mq-root-block\">/</span>';\n        let plusminus = '<span class=\"mq-root-block\">&plusmn;</span>';\n        let theta = '<span class=\"mq-root-block\">&theta;</span>';\n        let pi = '<span class=\"mq-root-block\">&pi;</span>';\n        let infinity = '<span class=\"mq-root-block\">&infin;</span>';\n\n        let caret = `\n        <div class=\"mq-math-mode\" style=\"cursor:pointer;font-size:100%;\">\n            <span class=\"mq-root-block\">\n                <var>x</var>\n                <span class=\"mq-supsub mq-non-leaf mq-sup-only\">\n                    <span class=\"mq-sup\">\n                        <var>y</var>\n                    </span>\n                </span>\n            </span>\n        </div>`;\n\n\n        this.define(\"sqrt\", sqrt, field => field.cmd(\"\\\\sqrt\"));\n        this.define(\"int\", int, field => field.cmd(\"\\\\int\"));\n        this.define(\"sum\", sum, field => field.cmd(\"\\\\sum\"));\n        this.define(\"lim\", lim, field => {\n            field.cmd(\"\\\\lim\").typedText(\"_\").write(\"x\").cmd(\"\\\\to\").write(\"0\").moveToRightEnd();\n        });\n        this.define(\"nchoosek\", nchoosek, field => field.cmd(\"\\\\choose\"));\n        this.define(\"divide\", divide, field => field.cmd(\"\\\\frac\"));\n        this.define(\"plusminus\", plusminus, field => field.cmd(\"\\\\pm\"));\n        this.define(\"theta\", theta, field => field.cmd(\"\\\\theta\"));\n        this.define(\"pi\", pi, field => field.cmd(\"\\\\pi\"));\n        this.define(\"infinity\", infinity, field => field.cmd(\"\\\\infinity\"));\n        this.define(\"caret\", caret, field => field.cmd(\"^\"));\n    }\n\n    bindInput(input) {\n        this.boundInput = input;\n    }\n\n}\n\nexport default { Input, Control, ControlList };"],"file":"visual-math-input.min.js"}