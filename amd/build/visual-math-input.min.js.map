{"version":3,"sources":["../src/visual-math-input.js"],"names":["define","$","MathQuill","lastFocusedInput","Input","input","parent","$input","$parent","wrapper","document","createElement","addClass","MQ","getInterface","field","MathField","spaceBehavesLikeTab","handlers","edit","onEdit","append","val","latex","$textarea","on","prop","el","find","Control","name","text","onClick","$element","element","html","event","preventDefault","focus","ControlList","controls","$wrapper","defineDefault","names","control","enable","nchoosek","caret","cmd","typedText","write","moveToRightEnd"],"mappings":"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","sourcesContent":["define(['jquery', './mathquill'], function ($, MathQuill) {\n\n    // When a control button is clicked, the input blurs.\n    // This lets the control button know which input to act on.\n    let lastFocusedInput = null;\n\n    class Input {\n\n        constructor(input, parent) {\n            this.$input = $(input);\n            this.$parent = $(parent);\n            let wrapper = document.createElement('div');\n            this.wrapper = $(wrapper).addClass('visual-math-input-field');\n            let MQ = MathQuill.getInterface(2);\n            this.field = MQ.MathField(wrapper, {\n                spaceBehavesLikeTab: true,\n                handlers: {\n                    edit: field => {\n                        this.onEdit($(input), field);\n                    }\n                }\n            });\n            this.$parent.append(wrapper);\n            this.onEdit = ($input, field) => $input.val('\\\\[ ' + field.latex() + ' \\\\]');\n            this.$textarea.on('blur', () => lastFocusedInput = this);\n        }\n\n        get $textarea() {\n            return $(this.field.el()).find('textarea');\n        }\n\n        enable() {\n            this.$textarea.prop('disabled', false);\n        }\n\n        disable() {\n            this.$textarea.prop('disabled', true);\n        }\n\n    }\n\n    class Control {\n\n        constructor(name, text, onClick) {\n            this.name = name;\n            this.text = text;\n            this.onClick = onClick;\n            this.$element = null;\n        }\n\n        enable() {\n            if (this.$element !== null) {\n                return;\n            }\n            let element = document.createElement('button');\n            this.$element = $(element);\n            this.$element.html(this.text);\n            this.$element.addClass('visual-math-input-control btn btn-primary');\n            this.$element.on('click', event => {\n                event.preventDefault();\n                if (lastFocusedInput !== null) {\n                    this.onClick(lastFocusedInput.field);\n                    lastFocusedInput.field.focus();\n                }\n            });\n        }\n\n    }\n\n    class ControlList {\n\n        constructor(wrapper) {\n            this.controls = [];\n            this.$wrapper = $(wrapper);\n            this.$wrapper.addClass('visual-math-input-wrapper');\n            this.defineDefault();\n        }\n\n        define(name, text, onClick) {\n            this.controls[name] = new Control(name, text, onClick);\n        }\n\n        enable(names) {\n            for (let name of names) {\n                let control = this.controls[name];\n                control.enable();\n                this.$wrapper.append(control.$element);\n            }\n        }\n\n        enableAll() {\n            for (let name in this.controls) {\n                let control = this.controls[name];\n                control.enable();\n                this.$wrapper.append(control.$element);\n            }\n        }\n\n        defineDefault() {\n            // It is also possible to render \\\\[ \\\\binom{n}{k} \\\\] with MathJax.\n            // Using MathQuill's HTML output is slightly less clean, but we avoid using YUI and MathJax.\n\n            let sqrt = '<span class=\"mq-root-block\">&radic;</span>';\n            let int = '<span class=\"mq-root-block\">&int;</span>';\n            let sum = '<span class=\"mq-root-block\"><span class=\"mq-large-operator mq-non-leaf\">&sum;</span></span>';\n            let lim = '<span class=\"mq-root-block\">lim</span>';\n\n            let nchoosek = '<div class=\"mq-math-mode\" style=\"cursor:pointer;font-size:100%;\">';\n            nchoosek += '<span class=\"mq-root-block\">';\n            nchoosek += '<span class=\"mq-non-leaf\">';\n            nchoosek += '<span class=\"mq-paren mq-scaled\" style=\"transform: scale(0.8, 1.5);\">(</span>';\n            nchoosek += '<span class=\"mq-non-leaf\" style=\"margin-top:0;\">';\n            nchoosek += '<span class=\"mq-array mq-non-leaf\">';\n            nchoosek += '<span style=\"font-size: 14px;\"><var>n</var></span>';\n            nchoosek += '<span style=\"font-size: 14px;\"><var>k</var></span>';\n            nchoosek += '</span></span>';\n            nchoosek += '<span class=\"mq-paren mq-scaled\" style=\"transform: scale(0.8, 1.5);\">)</span></span>';\n            nchoosek += '</span></div>';\n\n            let divide = '<span class=\"mq-root-block\">/</span>';\n            let plusminus = '<span class=\"mq-root-block\">&plusmn;</span>';\n            let theta = '<span class=\"mq-root-block\">&theta;</span>';\n            let pi = '<span class=\"mq-root-block\">&pi;</span>';\n            let infinity = '<span class=\"mq-root-block\">&infin;</span>';\n\n            let caret = '<div class=\"mq-math-mode\" style=\"cursor:pointer;font-size:100%;\">';\n            caret += '<span class=\"mq-root-block\">';\n            caret += '<var>x</var>';\n            caret += '<span class=\"mq-supsub mq-non-leaf mq-sup-only\">';\n            caret += '<span class=\"mq-sup\">';\n            caret += '<var>y</var>';\n            caret += '</span></span></span></div>';\n\n\n            this.define('sqrt', sqrt, field => field.cmd('\\\\sqrt'));\n            this.define('int', int, field => field.cmd('\\\\int'));\n            this.define('sum', sum, field => field.cmd('\\\\sum'));\n            this.define('lim', lim, field => {\n                field.cmd('\\\\lim').typedText('_').write('x').cmd('\\\\to').write('0').moveToRightEnd();\n            });\n            this.define('nchoosek', nchoosek, field => field.cmd('\\\\choose'));\n            this.define('divide', divide, field => field.cmd('\\\\frac'));\n            this.define('plusminus', plusminus, field => field.cmd('\\\\pm'));\n            this.define('theta', theta, field => field.cmd('\\\\theta'));\n            this.define('pi', pi, field => field.cmd('\\\\pi'));\n            this.define('infinity', infinity, field => field.cmd('\\\\infinity'));\n            this.define('caret', caret, field => field.cmd('^'));\n        }\n\n    }\n\n    return {\n        Input: Input,\n        Control: Control,\n        ControlList: ControlList\n    };\n\n});"],"file":"visual-math-input.min.js"}